public class Vehicle {

    public void run() {
        System.out.println("Vehicle is running");
    }

}
public class Car extends Vehicle{

	@Override 
    public void run() {
        System.out.println("Car is running");
    }
}


1. What does override do? Is it mandatory? If not what is the purpose of it?




----------------------------------------------------------------------------
2. What will this function print?
	
   public static void main(String[] args) {
        
		Vehicle vehicle = new Vehicle();

        vehicle.run();
		
		Vehicle car = new Car();

        car.run();
	}
 
 
 
----------------------------------------------------------------------------	
3. What will this function print?

	public static void main(String[] args) {
        
		Vehicle vehicle = new Vehicle();

        vehicle.run();
		
		Car car = new Car();

        car.run();
	}

----------------------------------------------------------------------------
4. Can we do this? 
   What will this function print?
	
	public static void main(String[] args) {
        
		Vehicle vehicle = new Vehicle();

        vehicle.run();
		
		Vehicle car = new Car();

        car.run();
	}	
	
----------------------------------------------------------------------------
5. Can we do this? 
   What will this function print?
	
	public static void main(String[] args) {
        
		Vehicle vehicle = new Vehicle();

        vehicle.run();
		
		Car car = new Vehicle();

        car.run();
	}	
	
----------------------------------------------------------------------------
6. What does this do? 
   Can we do this? 
   What will this function print?
	
	public static void main(String[] args) {
        
		((Vehicle) new Car()).run();
	}
	
	
----------------------------------------------------------------------------
7. What does this do? 
   Can we do this? 
   What will this function print?
	
	public static void main(String[] args) {
        
		((Car) new Vehicle()).run();
	}
	
	
	
	
	
	
	
} 